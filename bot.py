import discord
from discord.ext import commands
import asyncio
import os
import subprocess
from datetime import datetime

TOKEN = os.getenv("DISCORD_TOKEN")
if TOKEN is None:
    raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–æ—ó –ø–∞–ø–∫–∏ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤
temp_dir = '/tmp/recordings'
os.makedirs(temp_dir, exist_ok=True)

# –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
audio_file_path = os.path.join(temp_dir, 'audio_recording.wav')

# –ó–∞–ø–∏—Å –∞—É–¥—ñ–æ –≤ —Ñ–∞–π–ª
def save_audio_file(audio_data):
    with open(audio_file_path, 'wb') as f:
        f.write(audio_data)
    print(f"Audio saved to {audio_file_path}")

# –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –∑ –¥–∞–Ω–∏–º–∏ –∞—É–¥—ñ–æ
audio_data = b"dummy_audio_data"  # –¶–µ –º–∞—î –±—É—Ç–∏ —Ç–≤—ñ–π —Ä–µ–∞–ª—å–Ω–∏–π –∞—É–¥—ñ–æ –ø–æ—Ç—ñ–∫
save_audio_file(audio_data)

intents = discord.Intents.default()
intents.voice_states = True  # –í–∞–∂–ª–∏–≤–æ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –≥–æ–ª–æ—Å–æ–≤–∏—Ö –∫–∞–Ω–∞–ª—ñ–≤

bot = commands.Bot(command_prefix="!", intents=intents)

voice_clients = {}  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Å–µ—Å—ñ—ó –∑–∞–ø–∏—Å—É


async def start_recording(vc, channel_id):
    """–§—É–Ω–∫—Ü—ñ—è –∑–∞–ø–∏—Å—É –∞—É–¥—ñ–æ –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É —á–µ—Ä–µ–∑ FFmpeg"""
    filename = f"{RECORDINGS_DIR}/recording_{channel_id}_{datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}.mp3"

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ FFmpeg –¥–ª—è –∑–∞–ø–∏—Å—É –∞—É–¥—ñ–æ
    process = subprocess.Popen(
        [
            "ffmpeg",
            "-f", "s16le",
            "-ar", "48000",
            "-ac", "2",
            "-i", "pipe:0",
            filename
        ],
        stdin=subprocess.PIPE
    )

    voice_clients[channel_id] = (vc, process)
    print(f"üéôÔ∏è –ü–æ—á–∞–≤ –∑–∞–ø–∏—Å —É {filename}")

    return filename


async def stop_recording(channel_id):
    """–ó—É–ø–∏–Ω—è—î –∑–∞–ø–∏—Å —Ç–∞ –≤–∏—Ö–æ–¥–∏—Ç—å –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É"""
    if channel_id in voice_clients:
        vc, process = voice_clients[channel_id]

        # –ó–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ—Ü–µ—Å ffmpeg
        process.stdin.close()
        process.wait()

        # –í–∏—Ö–æ–¥–∏–º–æ –∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª—É
        await vc.disconnect()
        del voice_clients[channel_id]

        print(f"üõë –ó–∞–ø–∏—Å —É –∫–∞–Ω–∞–ª—ñ {channel_id} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ.")

        
@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω–æ —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ñ –∫–∞–Ω–∞–ª–∏!")


@bot.event
async def on_voice_state_update(member, before, after):
    """–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏–∫—ñ–≤ —É –≥–æ–ª–æ—Å–æ–≤–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö"""
    if member.bot:
        return  # –Ü–≥–Ω–æ—Ä—É—î–º–æ –±–æ—Ç–∞

    channel = after.channel or before.channel  # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–∞–Ω–∞–ª

    if not channel:
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥–µ–π —É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—ñ
    num_members = sum(1 for m in channel.members if not m.bot)

    if num_members >= 2 and channel.id not in voice_clients:
        # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—å —Ç–∞ –ø–æ—á–∏–Ω–∞—î–º–æ –∑–∞–ø–∏—Å
        vc = await channel.connect()
        await start_recording(vc, channel.id)

    elif num_members < 2 and channel.id in voice_clients:
        # –ó–∞–≤–µ—Ä—à—É—î–º–æ –∑–∞–ø–∏—Å, —è–∫—â–æ –∑–∞–ª–∏—à–∏–≤—Å—è –æ–¥–∏–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        await stop_recording(channel.id)


@bot.command()
async def start(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É"""
    await ctx.send("üéôÔ∏è –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ñ —á–∞—Ç–∏!")

@bot.command()
async def stop(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –±–æ—Ç–∞"""
    for channel_id in list(voice_clients.keys()):
        await stop_recording(channel_id)

    await ctx.send("üõë –ë–æ—Ç –∑—É–ø–∏–Ω–∏–≤—Å—è —Ç–∞ –∑–∞–≤–µ—Ä—à–∏–≤ —É—Å—ñ –∑–∞–ø–∏—Å–∏.")
    await bot.close()


bot.run(TOKEN)
